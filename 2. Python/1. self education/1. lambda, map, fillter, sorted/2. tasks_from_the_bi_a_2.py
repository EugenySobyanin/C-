# Задачи
# 1. Удвоение чисел:
# Напиши лямбда-функцию, которая принимает список чисел и возвращает новый список, содержащий числа, удвоенные в значении.

# 2. Фильтрация чисел по условию:
# Напиши лямбда-функцию, которая принимает список чисел и возвращает новый список, содержащий только числа больше 10.

# 3. Сортировка по алфавиту:
# Напиши лямбда-функцию, которая принимает список строк и сортирует его в алфавитном порядке.

# 4. Строки с фиксированной длиной:
# Напиши лямбда-функцию, которая принимает список строк и возвращает новый список, содержащий только строки длиной ровно 5 символов.

# 5. Произведение значений:
# Используй лямбда-функцию в сочетании с reduce из модуля functools, чтобы вычислить произведение всех чисел в списке.

# 6. Генерация словарей:
# Напиши лямбда-функцию, которая принимает два списка (например, ключи и значения) и возвращает список словарей, 
# где каждый словарь содержит один ключ и соответствующее значение.

# 7. Удаление дубликатов:
# Напиши лямбда-функцию, которая принимает список и возвращает новый список, содержащий уникальные элементы.

# 8. Преобразование регистра:
# Напиши лямбда-функцию, которая принимает список строк и возвращает новый список, где все строки преобразованы в верхний регистр.


numbers = [1, 12, 3, 14, 5, 16, 7, 8, 19, 10]
strings = ["apple", "ababa", "banana", "avocado", "grape", "orange", "kiwi"]


# Задача № 1
mult_x2 = list(map(lambda x: x * 2, numbers))
print(mult_x2)


# Задача № 2
filter_nums = list(filter(lambda x: x > 10, numbers))
print(filter_nums)

# Задача № 2 - другой вариант записи
func_filter_nums = lambda x: x > 10
print(list(filter(func_filter_nums, numbers)))


# Задача № 3 - работает неправильно - фильтрует только по первой букве
alphabet_sort = lambda x: x[0]
print(sorted(strings, key=alphabet_sort))


# Задача № 4
len_str_sort = list(filter(lambda x: len(x) == 5, strings))
print(len_str_sort)


# Задача № 5
